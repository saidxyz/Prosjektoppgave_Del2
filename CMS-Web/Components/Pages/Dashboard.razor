@page "/dashboard"
@using CMS_Web.Service
@inject LoginStateService LoginStateService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavManager

<h3>Welcome to the Dashboard</h3>
<button @onclick="OnLogoutClick">Logout</button>


@code {
    private string token;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");

                // If no token is found and the user isn't logged in, redirect to login
                if (string.IsNullOrEmpty(token) || !LoginStateService.IsLoggedIn)
                {
                    NavManager.NavigateTo("/login");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error retrieving token: {ex.Message}");
                NavManager.NavigateTo("/login");
            }
        }
    }

    private async Task OnLogoutClick()
    {
        // Clear token from localStorage and update the login state
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "authToken");
        LoginStateService.SetLoginStatus(false);

        // Redirect to login page after logout
        NavManager.NavigateTo("/login");
    }
}